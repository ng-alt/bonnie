.TH zcav 1 
.SH NAME
zcav \- program to test raw hard drive throughput.

.SH SYNOPSIS
.B zcav
.I [-b block-size] [-c count] [-s max-size] [-w] [-l log-file] [-f] file-name
.I [-l log-file [-f] file-name]...

.SH "DESCRIPTION"
This manual page documents briefly the
.BR zcav ,
program.
.P
Modern hard drives have a constant rotational speed but have varying numbers
of sectors per track (outside tracks are longer and have more sectors). This
is referred to as Zoned Constant Angular Velocity (or ZCAV). The outer tracks
will have a higher data transfer rate due to having more sectors per track,
these tracks generally have the lower track/sector numbers.
.P
This program tests the ZCAV performance of a hard drive, by reading the entire
data on it a specified number of times. The file name given as the first
parameter, it can be specified as
.BR - ,
for standard input. This file will be opened as read-only and in usual
operation it will be
.BR /dev/hdX
or
.BR /dev/ide/host0/busX/targetY/lun0/disc
depending on whether you use devfs or not (NB operating systems other than
Linux will have different device names).
The first parameter is the number of times to read through the specified file
or device (default 1). The second parameter is the block size in mega-bytes
(default 100).
.P
The output should be able to be easily graphed with
.BR gnuplot
which is what I use to view the results.

.SH OPTIONS
.TP
.B -b
the size of the blocks to read from disk (default 100M).
.TP
.B -c
the number of times to read the entire disk.
.TP
.B -s
the maximum amount of data (in megs) to read from a disk, useful if you want to
quickly test the start of a large drive.
.TP
.B -w
waiting mode. This means that after reading a block a thread will wait for
threads reading from other drives. Also the amount of data read from each drive
will be the same.
.TP
.B -f
the file-name for the input data. This isn't needed except on well configured
systems that have a recent Glibc where you can specify the file name without
the -f flag.

.SH AUTHOR
This program, it's manual page, and the Debian package were written by
Russell Coker <russell@coker.com.au>.

